<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 基于代理形式的声明式事务管理配置文件 -->

    <context:component-scan base-package="com.xx.spring.transaction.dao.**" />
    <context:component-scan base-package="com.xx.spring.transaction.service2.**" />

    <context:property-placeholder location="classpath:jdbc.properties" />

    <!--配置数据库连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClass}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="filters" value="stat" />
        <property name="maxActive" value="8" />
        <property name="initialSize" value="1" />
        <property name="maxWait" value="60000" />
        <property name="minIdle" value="1" />
        <property name="timeBetweenEvictionRunsMillis" value="3000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
    </bean>

    <!-- Spring JdbcTemplate -->
    <bean id="jt" class="org.springframework.jdbc.core.JdbcTemplate">
        <!-- 属性注入 -->
        <property name="dataSource" ref="dataSource" />
    </bean>


    <!-- 事务管理器 TransactionManager -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>


    <!-- 通用的代理对象类 -->
    <bean id="baseProxyBean" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <!-- 事务管理器 -->
        <property name="transactionManager" ref="transactionManager" />
        <!-- 事务属性 -->
        <property name="transactionAttributes">
            <props>
                <!--
                    prop的格式：
                        PROPAGATION   事务传播行为
                        ISOLOCATION   事务的隔离级别
                        readOnly      只读操作
                        -Exception    发生指定异常时回滚事务
                        +Exception    发生指定异常时依然提交事务
                -->
                <prop key="*">PROPAGATION_REQUIRED,+java.lang.ArithmeticException</prop>
            </props>
        </property>
    </bean>


    <!-- 转账操作 -->
    <bean id="accountService" class="com.xx.spring.transaction.service2.AccountService2" />

    <!-- 增强的转账事务操作代理类 -->
    <bean id="accountServiceProxy" parent="baseProxyBean">
        <!-- 事务管理的对象 -->
        <property name="target" ref="accountService" />
    </bean>

</beans>